services:
  db:
    container_name: "${POSTGRES_CONTAINER_NAME}"
    image: postgres:14.5-alpine
    restart: always
    env_file: ../.env
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ../migrations/001_init.up.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      - application

  db-service:
    container_name: "${DB_SERVER_CONTAINER_NAME}"
    env_file: ../.env
    build:
      context: ..
      dockerfile: docker/go-db-srv/Dockerfile
    volumes:
      - go-modules:/go/pkg/mod
    ports:
      - "${DB_SERVER_PORT}:${DB_SERVER_PORT}"
    depends_on:
      - db
    networks:
      - application

  server:
    container_name: "${SERVER_CONTAINER_NAME}"
    env_file: ../.env
    build:
      context: ..
      dockerfile: docker/go-chatting-app-srv/Dockerfile
    volumes:
      - go-modules:/go/pkg/mod
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    depends_on:
      - db
      - db-service
    networks:
      - application

networks:
  application:
    driver: "bridge"

volumes:
  pgdata:
    driver: local
  go-modules:
    driver: local
